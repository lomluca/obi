// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hb.proto

package heartbeat

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Heartbeat struct {
	// Cluster details
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// Cluster metrics
	AMResourceLimitMB                              int32    `protobuf:"varint,2,opt,name=AMResourceLimitMB,proto3" json:"AMResourceLimitMB,omitempty"`
	AMResourceLimitVCores                          int32    `protobuf:"varint,3,opt,name=AMResourceLimitVCores,proto3" json:"AMResourceLimitVCores,omitempty"`
	UsedAMResourceMB                               int32    `protobuf:"varint,4,opt,name=UsedAMResourceMB,proto3" json:"UsedAMResourceMB,omitempty"`
	UsedAMResourceVCores                           int32    `protobuf:"varint,5,opt,name=UsedAMResourceVCores,proto3" json:"UsedAMResourceVCores,omitempty"`
	AppsSubmitted                                  int32    `protobuf:"varint,6,opt,name=AppsSubmitted,proto3" json:"AppsSubmitted,omitempty"`
	AppsRunning                                    int32    `protobuf:"varint,7,opt,name=AppsRunning,proto3" json:"AppsRunning,omitempty"`
	AppsPending                                    int32    `protobuf:"varint,8,opt,name=AppsPending,proto3" json:"AppsPending,omitempty"`
	AppsCompleted                                  int32    `protobuf:"varint,9,opt,name=AppsCompleted,proto3" json:"AppsCompleted,omitempty"`
	AppsKilled                                     int32    `protobuf:"varint,10,opt,name=AppsKilled,proto3" json:"AppsKilled,omitempty"`
	AppsFailed                                     int32    `protobuf:"varint,11,opt,name=AppsFailed,proto3" json:"AppsFailed,omitempty"`
	AggregateContainersPreempted                   int32    `protobuf:"varint,12,opt,name=AggregateContainersPreempted,proto3" json:"AggregateContainersPreempted,omitempty"`
	ActiveApplications                             int32    `protobuf:"varint,13,opt,name=ActiveApplications,proto3" json:"ActiveApplications,omitempty"`
	AppAttemptFirstContainerAllocationDelayNumOps  int32    `protobuf:"varint,14,opt,name=AppAttemptFirstContainerAllocationDelayNumOps,proto3" json:"AppAttemptFirstContainerAllocationDelayNumOps,omitempty"`
	AppAttemptFirstContainerAllocationDelayAvgTime float32  `protobuf:"fixed32,15,opt,name=AppAttemptFirstContainerAllocationDelayAvgTime,proto3" json:"AppAttemptFirstContainerAllocationDelayAvgTime,omitempty"`
	AllocatedMB                                    int32    `protobuf:"varint,16,opt,name=AllocatedMB,proto3" json:"AllocatedMB,omitempty"`
	AllocatedVCores                                int32    `protobuf:"varint,17,opt,name=AllocatedVCores,proto3" json:"AllocatedVCores,omitempty"`
	AllocatedContainers                            int32    `protobuf:"varint,18,opt,name=AllocatedContainers,proto3" json:"AllocatedContainers,omitempty"`
	AggregateContainersAllocated                   int32    `protobuf:"varint,19,opt,name=AggregateContainersAllocated,proto3" json:"AggregateContainersAllocated,omitempty"`
	AggregateContainersReleased                    int32    `protobuf:"varint,20,opt,name=AggregateContainersReleased,proto3" json:"AggregateContainersReleased,omitempty"`
	AvailableMB                                    int32    `protobuf:"varint,21,opt,name=AvailableMB,proto3" json:"AvailableMB,omitempty"`
	AvailableVCores                                int32    `protobuf:"varint,22,opt,name=AvailableVCores,proto3" json:"AvailableVCores,omitempty"`
	PendingMB                                      int32    `protobuf:"varint,23,opt,name=PendingMB,proto3" json:"PendingMB,omitempty"`
	PendingVCores                                  int32    `protobuf:"varint,24,opt,name=PendingVCores,proto3" json:"PendingVCores,omitempty"`
	PendingContainers                              int32    `protobuf:"varint,25,opt,name=PendingContainers,proto3" json:"PendingContainers,omitempty"`
	XXX_NoUnkeyedLiteral                           struct{} `json:"-"`
	XXX_unrecognized                               []byte   `json:"-"`
	XXX_sizecache                                  int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_hb_5222a5daf9ce36ae, []int{0}
}
func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (dst *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(dst, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *Heartbeat) GetAMResourceLimitMB() int32 {
	if m != nil {
		return m.AMResourceLimitMB
	}
	return 0
}

func (m *Heartbeat) GetAMResourceLimitVCores() int32 {
	if m != nil {
		return m.AMResourceLimitVCores
	}
	return 0
}

func (m *Heartbeat) GetUsedAMResourceMB() int32 {
	if m != nil {
		return m.UsedAMResourceMB
	}
	return 0
}

func (m *Heartbeat) GetUsedAMResourceVCores() int32 {
	if m != nil {
		return m.UsedAMResourceVCores
	}
	return 0
}

func (m *Heartbeat) GetAppsSubmitted() int32 {
	if m != nil {
		return m.AppsSubmitted
	}
	return 0
}

func (m *Heartbeat) GetAppsRunning() int32 {
	if m != nil {
		return m.AppsRunning
	}
	return 0
}

func (m *Heartbeat) GetAppsPending() int32 {
	if m != nil {
		return m.AppsPending
	}
	return 0
}

func (m *Heartbeat) GetAppsCompleted() int32 {
	if m != nil {
		return m.AppsCompleted
	}
	return 0
}

func (m *Heartbeat) GetAppsKilled() int32 {
	if m != nil {
		return m.AppsKilled
	}
	return 0
}

func (m *Heartbeat) GetAppsFailed() int32 {
	if m != nil {
		return m.AppsFailed
	}
	return 0
}

func (m *Heartbeat) GetAggregateContainersPreempted() int32 {
	if m != nil {
		return m.AggregateContainersPreempted
	}
	return 0
}

func (m *Heartbeat) GetActiveApplications() int32 {
	if m != nil {
		return m.ActiveApplications
	}
	return 0
}

func (m *Heartbeat) GetAppAttemptFirstContainerAllocationDelayNumOps() int32 {
	if m != nil {
		return m.AppAttemptFirstContainerAllocationDelayNumOps
	}
	return 0
}

func (m *Heartbeat) GetAppAttemptFirstContainerAllocationDelayAvgTime() float32 {
	if m != nil {
		return m.AppAttemptFirstContainerAllocationDelayAvgTime
	}
	return 0
}

func (m *Heartbeat) GetAllocatedMB() int32 {
	if m != nil {
		return m.AllocatedMB
	}
	return 0
}

func (m *Heartbeat) GetAllocatedVCores() int32 {
	if m != nil {
		return m.AllocatedVCores
	}
	return 0
}

func (m *Heartbeat) GetAllocatedContainers() int32 {
	if m != nil {
		return m.AllocatedContainers
	}
	return 0
}

func (m *Heartbeat) GetAggregateContainersAllocated() int32 {
	if m != nil {
		return m.AggregateContainersAllocated
	}
	return 0
}

func (m *Heartbeat) GetAggregateContainersReleased() int32 {
	if m != nil {
		return m.AggregateContainersReleased
	}
	return 0
}

func (m *Heartbeat) GetAvailableMB() int32 {
	if m != nil {
		return m.AvailableMB
	}
	return 0
}

func (m *Heartbeat) GetAvailableVCores() int32 {
	if m != nil {
		return m.AvailableVCores
	}
	return 0
}

func (m *Heartbeat) GetPendingMB() int32 {
	if m != nil {
		return m.PendingMB
	}
	return 0
}

func (m *Heartbeat) GetPendingVCores() int32 {
	if m != nil {
		return m.PendingVCores
	}
	return 0
}

func (m *Heartbeat) GetPendingContainers() int32 {
	if m != nil {
		return m.PendingContainers
	}
	return 0
}

func init() {
	proto.RegisterType((*Heartbeat)(nil), "heartbeat.Heartbeat")
}

func init() { proto.RegisterFile("hb.proto", fileDescriptor_hb_5222a5daf9ce36ae) }

var fileDescriptor_hb_5222a5daf9ce36ae = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xdf, 0x6e, 0xd3, 0x4c,
	0x10, 0xc5, 0x95, 0x7e, 0x5f, 0x4b, 0x3d, 0x69, 0x69, 0x3b, 0x6d, 0x61, 0x11, 0x15, 0x0a, 0x88,
	0x8b, 0x08, 0x41, 0x84, 0x80, 0x07, 0xc0, 0x09, 0xaa, 0x90, 0x20, 0xa5, 0x32, 0x7f, 0x6e, 0xd1,
	0x3a, 0x1e, 0xdc, 0x95, 0xd6, 0xf6, 0xca, 0xbb, 0x8e, 0xc4, 0x0b, 0xf2, 0x5c, 0x68, 0xd7, 0x6b,
	0x3b, 0x69, 0xdc, 0x8a, 0x5e, 0xee, 0xef, 0x9c, 0x33, 0x23, 0xcd, 0x78, 0x0c, 0xbb, 0x57, 0xf1,
	0x44, 0x95, 0x85, 0x29, 0x30, 0xb8, 0x22, 0x5e, 0x9a, 0x98, 0xb8, 0x79, 0xf6, 0x27, 0x80, 0xe0,
	0x63, 0xf3, 0xc2, 0xa7, 0xb0, 0xb7, 0x90, 0x95, 0x36, 0x54, 0xfe, 0xcc, 0x79, 0x46, 0x6c, 0x30,
	0x1a, 0x8c, 0x83, 0x68, 0xe8, 0xd9, 0x05, 0xcf, 0x08, 0x5f, 0xc2, 0x51, 0x38, 0x8f, 0x48, 0x17,
	0x55, 0xb9, 0xa0, 0xcf, 0x22, 0x13, 0x66, 0x3e, 0x65, 0x5b, 0xa3, 0xc1, 0x78, 0x3b, 0xda, 0x14,
	0xf0, 0x1d, 0x9c, 0x5e, 0x83, 0x3f, 0x66, 0x45, 0x49, 0x9a, 0xfd, 0xe7, 0x12, 0xfd, 0x22, 0xbe,
	0x80, 0xc3, 0xef, 0x9a, 0x92, 0x4e, 0x9c, 0x4f, 0xd9, 0xff, 0x2e, 0xb0, 0xc1, 0xf1, 0x0d, 0x9c,
	0xac, 0x33, 0xdf, 0x60, 0xdb, 0xf9, 0x7b, 0x35, 0x7c, 0x0e, 0xfb, 0xa1, 0x52, 0xfa, 0x6b, 0x15,
	0x67, 0xc2, 0x18, 0x4a, 0xd8, 0x8e, 0x33, 0xaf, 0x43, 0x1c, 0xc1, 0xd0, 0x82, 0xa8, 0xca, 0x73,
	0x91, 0xa7, 0xec, 0x9e, 0xf3, 0xac, 0xa2, 0xc6, 0x71, 0x49, 0x79, 0x62, 0x1d, 0xbb, 0x9d, 0xc3,
	0xa3, 0xa6, 0xd3, 0xac, 0xc8, 0x94, 0x24, 0xdb, 0x29, 0xe8, 0x3a, 0xb5, 0x10, 0x9f, 0x00, 0x58,
	0xf0, 0x49, 0x48, 0x49, 0x09, 0x03, 0x67, 0x59, 0x21, 0x8d, 0x7e, 0xce, 0x85, 0xd5, 0x87, 0x9d,
	0x5e, 0x13, 0x9c, 0xc2, 0x59, 0x98, 0xa6, 0x25, 0xa5, 0xdc, 0xd0, 0xac, 0xc8, 0x0d, 0x17, 0x39,
	0x95, 0xfa, 0xb2, 0x24, 0xca, 0x94, 0x6d, 0xba, 0xe7, 0x12, 0xb7, 0x7a, 0x70, 0x02, 0x18, 0x2e,
	0x8c, 0x58, 0x52, 0xa8, 0x94, 0x14, 0x0b, 0x6e, 0x44, 0x91, 0x6b, 0xb6, 0xef, 0x92, 0x3d, 0x0a,
	0x26, 0xf0, 0x2a, 0x54, 0x2a, 0x34, 0xc6, 0xe6, 0xcf, 0x45, 0xa9, 0x4d, 0x5b, 0x35, 0x94, 0xb2,
	0xa8, 0x6d, 0x1f, 0x48, 0xf2, 0xdf, 0x17, 0x55, 0xf6, 0x45, 0x69, 0x76, 0xdf, 0x95, 0xba, 0x5b,
	0x08, 0x7f, 0xc1, 0xe4, 0x1f, 0x03, 0xe1, 0x32, 0xfd, 0x26, 0x32, 0x62, 0x07, 0xa3, 0xc1, 0x78,
	0x2b, 0xba, 0x63, 0xca, 0x6d, 0xb2, 0x56, 0x28, 0x99, 0x4f, 0xd9, 0xa1, 0xdf, 0x64, 0x87, 0x70,
	0x0c, 0x07, 0xed, 0xd3, 0x7f, 0x62, 0x47, 0xce, 0x75, 0x1d, 0xe3, 0x6b, 0x38, 0x6e, 0x51, 0x37,
	0x69, 0x86, 0xce, 0xdd, 0x27, 0xdd, 0xb0, 0xbf, 0xd6, 0xc9, 0x8e, 0x6f, 0xdc, 0x5f, 0xeb, 0xc1,
	0xf7, 0xf0, 0xb8, 0x47, 0x8f, 0x48, 0x12, 0xd7, 0x94, 0xb0, 0x13, 0x57, 0xe2, 0x36, 0x8b, 0x9b,
	0xc1, 0x92, 0x0b, 0xc9, 0x63, 0x69, 0x0f, 0xee, 0xd4, 0xcf, 0xa0, 0x43, 0x6e, 0x06, 0xcd, 0xd3,
	0xcf, 0xe0, 0x81, 0x9f, 0xc1, 0x3a, 0xc6, 0x33, 0x08, 0xfc, 0x09, 0xcc, 0xa7, 0xec, 0xa1, 0xf3,
	0x74, 0xc0, 0x5e, 0x85, 0x7f, 0xf8, 0x2a, 0xac, 0xbe, 0x8a, 0x35, 0x68, 0xff, 0x34, 0x1e, 0xac,
	0x4c, 0xf1, 0x51, 0xfd, 0xa7, 0xd9, 0x10, 0xe2, 0x1d, 0xf7, 0x6b, 0x7b, 0xfb, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x45, 0x6f, 0x6f, 0xaa, 0xe6, 0x04, 0x00, 0x00,
}
